version: '3.8'

services:
  # Main API service
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/readmission
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_REGISTRY_URI=http://mlflow:5000
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - API_RATE_LIMIT=100
      - ENVIRONMENT=production
      - PREDICTION_THRESHOLD=0.5
    depends_on:
      - db
      - mlflow
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./monitoring:/app/monitoring
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=readmission
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MLflow tracking server
  mlflow:
    image: python:3.11-slim
    command: >
      bash -c "pip install mlflow psycopg2-binary &&
               mlflow server --host 0.0.0.0 --port 5000
               --backend-store-uri postgresql://postgres:password@db:5432/readmission
               --default-artifact-root ./mlruns"
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://localhost:5000
    depends_on:
      - db
    volumes:
      - ./mlruns:/app/mlruns
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for rate limiting (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/ssl:/etc/nginx/ssl
    depends_on:
      - api
    restart: unless-stopped

  # Monitoring service (Evidently)
  monitoring:
    build: .
    command: >
      bash -c "pip install evidently &&
               python -m monitoring.drift_detector"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/readmission
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - db
      - mlflow
    volumes:
      - ./monitoring:/app/monitoring
      - ./data:/app/data
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    driver: bridge

